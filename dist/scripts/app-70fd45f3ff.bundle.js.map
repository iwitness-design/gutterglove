{"version":3,"sources":["webpack:/webpack/bootstrap d5b442bca63bc975ee3e","webpack:///src/scripts/modules/carousel.js","webpack:///src/scripts/modules/navToggle.js","webpack:///src/scripts/modules/slider.js","webpack:///node_modules/@glidejs/glide/dist/glide.esm.js","webpack:///src/scripts/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_glide","Glide","type","perView","gap","breakpoints","1023","600","mount","hamburger","document","querySelector","nav","addEventListener","classList","toggle","__webpack_exports__","value","defaults","startAt","focusAt","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_extends","assign","arguments","source","toInt","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","define","prop","definition","mergeOptions","settings","options","EventsBus","events","undefined","this","hop","event","handler","on","index","push","remove","context","emit","forEach","item","selector","_c","_t","_e","disabled","extensions","glide","components","_name","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","_i","_d","status","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","EventsBinder","listeners","el","closure","capture","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","Rtl","Components","modify","translate","Direction","is","mutator","Events","TRANSFORMERS","Gaps","Clones","grow","Peek","before","width","Sizes","slideWidth","concat","mutate","transformer","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","sortBreakpoints","points","keys","sort","reduce","r","k","COMPONENTS","Html","root","track","slides","slice","wrapper","children","filter","slide","contains","_r","t","Translate","transform","style","isType","isOffset","after","movement","compose","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","steps","countableSteps","isEnd","min","isStart","_m","substr","Swipe","swipeSin","swipeStartX","swipeStartY","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","swipeCathetus","asin","parseFloat","PI","stopPropagation","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","Glide$1","_Core","Glide$$1","self","ReferenceError","possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","inherits","receiver","Function","desc","getOwnPropertyDescriptor","parent","_navToggle2","default","_carousel2","_slider2"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"multi /src/scripts/app.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5b442bca63bc975ee3e","// Glide carousel\n// new Glide('.glide').mount();\nimport Glide from '@glidejs/glide';\n\nconst glideCarousel = () => {\n  const carousel = new Glide('.c-slider--carousel', {\n    type: 'carousel',\n    perView: 3,\n    gap: 0,\n    breakpoints: {\n      1023: {\n        perView: 2,\n      },\n      600: {\n        perView: 1,\n      },\n    },\n  });\n\n  carousel.mount();\n};\n\nexport default glideCarousel;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/modules/carousel.js","const hamburgerTrigger = () => {\n  const hamburger = document.querySelector('.hamburger');\n  const nav = document.querySelector('.c-nav');\n\n  hamburger.addEventListener('click', () => {\n    hamburger.classList.toggle('is-active');\n  });\n\n  nav.addEventListener('click', () => {\n    nav.classList.toggle('is-active');\n  });\n};\n\nexport default hamburgerTrigger;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/modules/navToggle.js","// Glide fullwidth slider\nimport Glide from '@glidejs/glide';\n\nconst glideSlider = () => {\n  const slider = new Glide('.c-slider--fullwidth', {\n    perView: 1,\n  });\n\n  slider.mount();\n};\n\nexport default glideSlider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/modules/slider.js","/*!\n * Glide.js v3.2.3\n * (c) 2013-2018 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // While number of slides inside instance is smaller\n      // that `perView` settings we should't run at all.\n      // Running distance has to be zero.\n\n      if (settings.perView > length) {\n        return 0;\n      }\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = this.slideWidth + 'px';\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var start = slides.slice(0, perView);\n      var end = slides.slice(-perView);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = Components.Sizes.slideWidth + 'px';\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], false);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = (powEX + powEY) * (powEX + powEY);\n        var swipeCathetus = powEY * powEY;\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        Components.Move.make(subExSx * toFloat(touchRatio));\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        });\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        });\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.stopPropagation();\n\n      if (prevented) {\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on(['click', 'touchstart'], elements[i], this.click);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@glidejs/glide/dist/glide.esm.js\n// module id = bHko\n// module chunks = app","/*\n  Project: Gutterglove\n  Author: iWitness Design\n */\n\nimport hamburger from './modules/navToggle';\nimport glideCarousel from './modules/carousel';\nimport glideSlider from './modules/slider';\n\nhamburger();\n\nif (document.querySelector('.c-slider--carousel')) {\n  glideCarousel();\n}\n\nif (document.querySelector('.c-slider--fullwidth')) {\n  glideSlider();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app.js"]}